services:

  airflow-scheduler:
    image: apache/airflow:2.6.1
    container_name: airflow-scheduler
    restart: unless-stopped
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
      AIRFLOW__WEBSERVER__SECRET_KEY: secret
      AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
      AIRFLOW__SCHEDULER__ENABLE_HEALTH_CHECK: true
    depends_on:
      postgresql:
        condition: service_healthy
      mongodb:
        condition: service_healthy
    command: >
      bash -c "
      airflow db init &&
      airflow scheduler"
    volumes:
      - ./airflow/dags:/opt/airflow/dags  
      - airflow_data:/opt/airflow  
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M

  airflow-webserver:
    image: apache/airflow:2.6.1
    container_name: airflow-webserver
    restart: unless-stopped
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
      AIRFLOW__SCHEDULER__ENABLE_HEALTH_CHECK: true
      AIRFLOW__WEBSERVER__SECRET_KEY: secret
    ports:
      - "8080:8080"
    depends_on:
      postgresql:
        condition: service_healthy
      mongodb:
        condition: service_healthy
    command: >
      bash -c "
      airflow db init &&
      airflow webserver"
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - airflow_data:/opt/airflow
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M

  postgresql:
    image: postgres:latest
    container_name: postgres
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    ports:
      - "5432:5432"
    volumes:
      -  postgresql_data:/data/db
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 10s
      timeout: 5s
      retries: 5

  mongodb:
    image: mongo:latest
    container_name: mongodb
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=rootpassword
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    healthcheck:
      test: ["CMD", "/usr/bin/mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 20s
      timeout: 10s
      retries: 5

volumes:
  postgresql_data:
  airflow_data:
  mongodb_data:

